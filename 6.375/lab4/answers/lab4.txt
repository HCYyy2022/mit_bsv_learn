//***********************************************************************************************//
//**  1. Report the number of Total LUTs, FFs, and DSP48 used and their percentage in your entire
//**  design (mkPcieTop) after making the pitch factor dynamic. Report the Total LUTs, FFs, and
//**  DSP48 used and their percentage by each of the AudioPipeline, FIR, FFT, ToMP, PitchAdjust,
//**  FromMP, and IFFT modules.
//***********************************************************************************************//



//***********************************************************************************************//
//**  2. Report the length of the critical path of your audio pipeline. Can you tell where in the design
//**  your critical path is?
//***********************************************************************************************//



//***********************************************************************************************//
//**  3. Did you run into any problems using the FPGA?
//***********************************************************************************************//



//***********************************************************************************************//
//**  4. What advantages are there to using subinterfaces in an interface instead of just using methods?
//***********************************************************************************************//
(1)Modular design: Subinterfaces allow the design to be decomposed into smaller modules, each of which can focus on handling specific functionality or data flow. 
This can improve the maintainability and reusability of the design.

(2)Flexibility: Subinterfaces can be combined and reused as needed, supporting flexible system architectures and configurations. This flexibility enables the reuse 
of subinterface modules in different systems, reducing redundant design work.

(3)Interface separation: By using subinterfaces, complex interfaces can be broken down into simpler parts,
reducing design complexity and improving design comprehensibility.

(4)Parallel development: Subinterfaces enable different teams or individuals to develop different modules in parallel, and then integrate them into the overall design.
This parallel development can improve design efficiency and accelerate project progress.



//***********************************************************************************************//
//**  5. If you try to synthesize the audio pipeline with a 32 point FFT, you'll see it doesn't fit on the
//**  FPGA. Ideally we could use a 1024 point FFT and still maintain the target rate of processing
//**  44100 samples per second. Using the circular pipeline for the FFT, it would take 10 cycles to
//**  calculate the FFT of 1024 samples. At 50 Mhz this means the FFT supports a throughput
//**  of 1024/10*50, 000, 000 = 5, 120, 000, 000 samples per second, which is much greater than
//**  the 16 *44100 = 705600 samples per second our application requires the FFT to support
//**  assuming we have an overlap of N=S = 16. Also, with a 1024 point FFT, the input vector is
//**  whopping 1024 *(2 *(2 *16)) = 65536 bits wide. Given our design of the FFT has a much
//**  higher throughput than we need and an excessively large input width, how could we change
//**  our implementation of the FFT to both fit on the FPGA using 1024 points and still meet our
//**  required sample rate? Would the rest of the audio pipeline have to change to support this as
//**  well?
//***********************************************************************************************//